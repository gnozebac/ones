{"version":3,"sources":["pages/Splash.js","images/logo1.jpeg","components/Navbar.js","components/CodeInput.js","pages/Search.js","components/FormWeight.js","pages/Weight.js","services/CustomerService.js","pages/Results.js","components/TextInput.js","components/FormNew.js","pages/CustomerNew.js","components/FormSearch.js","pages/SearchOne.js","pages/Test.js","components/FormUpdate.js","pages/CustomerUpdate.js","services/MeasureService.js","components/FormUpdateAll.js","pages/CustomerUpdateAll.js","services/ExerciseService.js","pages/Routine.js","pages/Diet.js","services/HistoryService.js","pages/History.js","App.js","reportWebVitals.js","index.js"],"names":["Splash","Container","maxWidth","style","display","flexDirection","alignItems","opts","height","width","playerVars","autoplay","videoId","to","marginTop","textDecoration","Button","variant","color","fontSize","Navbar","history","useHistory","React","value","setValue","marginBottom","BottomNavigation","showLabels","onChange","event","newValue","console","log","BottomNavigationAction","label","icon","onClick","goBack","justifyContent","src","logo","alt","validationSchema","yup","systemId","required","typeError","FormSearch","classes","useStyles","formik","useFormik","initialValues","onSubmit","values","url","push","component","className","paper","handleSubmit","form","Typography","TextField","margin","fullWidth","id","name","autoFocus","handleChange","error","touched","Boolean","errors","helperText","type","submit","makeStyles","theme","spacing","avatar","backgroundColor","palette","secondary","main","Search","Fragment","FormWeight","codeCustomer","useState","customer","setCustomer","weight","x","useEffect","fetch","then","response","json","data","Grid","container","firstname","autoComplete","pathname","state","code","Weight","current","useParams","useLocation","urlCrud","getOneCustomer","a","createCustomer","method","body","JSON","stringify","headers","resp","updateAllCustomer","updateCustomer","intialCustomer","lastname","username","password","bmi","workoutId","dietId","status","deleted","Results","URLSearchParams","search","get","loading","setLoading","indicator","setIndicator","setError","ok","Error","sex","catch","err","message","direction","List","ListItem","ListItemIcon","ListItemText","substring","toUpperCase","maxValue","Number","needleColor","startColor","segments","endColor","maxSegmentLabels","ButtonGroup","aria-label","disabled","Link","routineId","customerId","TextInput","props","useField","field","meta","initValuesCustomer","yearBirth","monthBirth","dayBirth","bloodPressure","heartRate","dateControl","chest","leftArm","rightArm","waist","hips","leftThigh","rightThigh","oneOf","FormNew","fecha","Date","getFullYear","getMonth","getDate","CssBaseline","Divider","Chip","item","xs","CustomerNew","SearchOne","ChatRoomPage","enableReinitialize","min","FormUpdate","systemIdc","sm","CustomerUpdate","getMeasureByCustomerId","FormUpdateAll","measure","CustomerUpdateAll","getExercicesByWorkoutId","Row","row","open","setOpen","TableRow","sx","borderBottom","TableCell","IconButton","size","scope","description","align","repetitions","series","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","path","gutterBottom","details","Routine","location","exercises","setExercises","TableContainer","Paper","Table","TableHead","TableBody","map","exercise","intialDiet","Diet","diet","setDiet","getHistoryByCustomerId","Item","styled","typography","body2","padding","textAlign","text","flexGrow","History","histories","setHistories","App","exact","Test","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d6391b8.chunk.js","sourcesContent":["import React from \"react\";\nimport YouTube from 'react-youtube';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nfunction Splash() {\n    const opts = {\n        height: '590',\n        width: '1024',\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n    return (\n        <Container maxWidth=\"lg\">\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            }}>\n                <YouTube\n                    opts={opts}\n                    videoId={'vi1-4fcX_ig'}\n                />\n                <Link to=\"/search\" style={{ marginTop: 35, textDecoration: 'none' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{\n                            width: 200,\n                            height: 80,\n                            fontSize: '2rem'\n                        }}\n                    >\n                        Entrar\n                    </Button>\n                </Link>\n            </div>\n        </Container>\n\n    );\n}\n\nexport default Splash;\n\n","export default __webpack_public_path__ + \"static/media/logo1.7e381f27.jpeg\";","import * as React from 'react';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport ArrowBack from '@mui/icons-material/ArrowBack';\nimport Comment from '@mui/icons-material/Comment';\nimport FitnessCenter from '@mui/icons-material/FitnessCenter';\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../images/logo1.jpeg\";\n\nfunction Navbar() {\n  const history = useHistory();\n\n  const back = () => {\n    history.goBack();\n  }\n  const [value, setValue] = React.useState(0);\n  return (\n\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom:35      \n    }\n    }>\n      <BottomNavigation\n        showLabels\n        value={value}\n        onChange={(event, newValue) => {\n          setValue((newValue));\n          console.log(newValue)\n        }}\n        style={{ width: 1024 }}\n\n      >\n        <BottomNavigationAction\n          label=\"Atras\"\n          icon={<ArrowBack />}\n          onClick={() => { back() }}\n        />\n        <BottomNavigationAction label=\"OneSport\" icon={<FitnessCenter />} />\n        <BottomNavigationAction label=\"Sugerencias\" icon={<Comment />} />\n      </BottomNavigation>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop :35 \n      }\n      }>\n        <img src={logo} style={{ width: 300 }} alt='logo' />\n      </div>\n    </div>\n\n  );\n\n}\n\nexport default Navbar;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst validationSchema = yup.object({\n  systemId: yup\n    .number()\n    .required('Requerido')\n    .typeError('Deber ser numero')\n});\n\nexport default function FormSearch() {\n  const history = useHistory();\n  const classes = useStyles();\n  const push = (url) => {\n    history.push(url);\n  }\n  const formik = useFormik({\n    initialValues: { systemId: '' },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n            \n      push(`/results?systemId=${values.systemId}`);\n    }\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n        <form onSubmit={formik.handleSubmit} className={classes.form} >\n          <Typography component=\"h1\" variant=\"h5\">\n            Ingresar código\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"systemId\"\n            label=\"Código\"\n            name=\"systemId\"            \n            autoFocus\n            onChange={formik.handleChange}\n            value={formik.values.systemId}\n            error={formik.touched.systemId && Boolean(formik.errors.systemId)}\n            helperText={formik.touched.systemId && formik.errors.systemId}\n          />\n\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Buscar\n          </Button>\n\n\n\n        </form>\n\n      </div>\n\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));","import React from \"react\";\nimport Navbar from '../components/Navbar'\nimport CodeInput from '../components/CodeInput'\n\n\nfunction Search (){\n    return(        \n        <React.Fragment>    \n            <Navbar />\n            <CodeInput />                    \n        </React.Fragment>\n    );\n}\n\nexport default Search;","import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { Link } from \"react-router-dom\";\nimport { useFormik} from 'formik';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction FormWeight({ codeCustomer }) {\n  const [customer, setCustomer] = useState('')\n  const formik = useFormik({\n    initialValues: {\n      weight: \"\"\n    },\n    onSubmit: x => console.log(x)\n  });\n  \n  useEffect(()=>{\n    fetch(`https://besport.herokuapp.com/customers/${codeCustomer}`)\n    .then(response => response.json())\n    .then(data => setCustomer(data))\n  },[codeCustomer])\n  \n    const wrapper = {\n      textDecoration: 'none'\n    };\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n     \n      <div className={classes.paper}>\n      <form className={classes.form} >\n      <Typography component=\"h1\" variant=\"h5\">\n          Peso actual\n        </Typography>\n            <Grid container spacing={3}>   \n            <h3> Cedula: ****** {customer.firstname}</h3>              \n                 <TextField\n                  autoComplete=\"fweight\"            \n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"weight\"                \n                  id=\"weight\"\n                  label=\"Peso\"\n                  autoFocus\n                  onChange ={formik.handleChange('weight')}\n                  value={formik.values.weight}\n              />\n            </Grid>\n            <Link to={{\n            pathname: '/results/current',\n            state: {\n              code: customer.id,\n              weight: formik.values.weight\n            }\n            }} style={wrapper} \n          >\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Calcular\n              </Button>\n            </Link>          \n        </form>\n      </div>\n\n    </Container>\n  );\n}\n\nexport default FormWeight;","import React from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Navbar from '../components/Navbar'\nimport FormWeight from '../components/FormWeight'\n\nfunction Weight (){\n\n   const { current } = useParams()\n   const location = useLocation()\n   const { code } = location.state\n\n   console.log('code ss: ', code, ' url ', current);\n    return(        \n        <React.Fragment>    \n        <Navbar />\n            <FormWeight codeCustomer={code}/>                    \n        </React.Fragment>    \n    );\n}\n\nexport default Weight;","//const urlCrud = 'http://localhost:8081/customers';\nconst urlCrud = 'https://onesportbev1.herokuapp.com/customers';\nconst urlCrudHistory = 'https://onesportbev1.herokuapp.com/history/';\n\nconst getOneCustomer = async (id) => {\n    const response = await fetch(`${urlCrud}/${id}`);    \n    return response;\n    //   data = await response.json();\n}\n\nconst getDataBmi = async (id) => {\n    const response = await fetch(`${urlCrud}/${id}/bmi`);\n    const data = await response.json();\n    return data;\n}\n\nconst getDataHistory = async (id) => {\n    const response = await fetch(`${urlCrudHistory}/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nconst createCustomer = async (customer) => {\n    \n    const resp = await fetch(urlCrud, {\n        method: 'POST',\n        body: JSON.stringify(customer),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    return await resp.json();\n}\n\nconst updateAllCustomer = async (customer) => {\n    const resp = await fetch(urlCrud, {\n        method: 'PUT',\n        body: JSON.stringify(customer),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    return await resp.json();\n}\n\n\n\nconst addHistory = async (dataWeight) => {\n    const resp = await fetch(urlCrudHistory, {\n        method: 'POST',\n        body: JSON.stringify(dataWeight),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    return await resp.json();\n}\n\nconst updateCustomer = async (customer) => {\n    const resp = await fetch(urlCrud, {\n        method: 'PATCH',\n        body: JSON.stringify(customer),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    return await resp.json();\n}\n\nconst delteCustomer = async (id, customer) => {\n\n    const resp = await fetch(`${urlCrud}/${id} `, {\n        method: 'DELETE'\n    });\n    //console.log(await resp.json());\n    return (resp.ok) ? 'Borrado' : 'No se puede elminar';\n}\n\nexport {\n    createCustomer,\n    updateCustomer,\n    updateAllCustomer,\n    delteCustomer,\n    getOneCustomer,\n    getDataBmi,\n    getDataHistory,\n    addHistory\n}","import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar'\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { useLocation } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { getOneCustomer } from '../services/CustomerService';\nimport ReactSpeedometer from \"react-d3-speedometer\"\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nfunction useQuery() {\n\treturn new URLSearchParams(useLocation().search);\n}\nconst intialCustomer = {\n\tid: '',\n\tsystemId: '',\n\tfirstname: '',\n\tlastname: '',\n\tusername: '',\n\tpassword: '',\n\theight: '',\n\tweight: '',\n\tbmi: '',\n\tworkoutId: '',\n\tdietId: '',\n\tstatus: '',\n\tdeleted: ''\n}\n\nfunction Results() {\n\tconst query = useQuery();\n\tconst systemId = query.get('systemId');\n\tconst [customer, setCustomer] = useState(intialCustomer)\n\tconst [loading, setLoading] = useState(true)\n\tconst [indicator, setIndicator] = useState('')\n\tconst [error, setError] = useState(null)\n\tuseEffect(() => {\n\t\tgetOneCustomer(systemId)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\n\t\t\t\t\tthrow Error('No se encuentra el codigo');\n\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tconst x = data.bmi;\n\t\t\t\tif (data.sex) {\n\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\tcase (x < 20):\n\t\t\t\t\t\t\tsetIndicator('Desnutrición');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 25):\n\t\t\t\t\t\t\tsetIndicator('Normal');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 30):\n\t\t\t\t\t\t\tsetIndicator('Sobrepeso');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 40):\n\t\t\t\t\t\t\tsetIndicator('Obesidad');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetIndicator('Obesidad grave');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\tcase (x < 19):\n\t\t\t\t\t\t\tsetIndicator('Desnutrición');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 23):\n\t\t\t\t\t\t\tsetIndicator('Normal');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 27):\n\t\t\t\t\t\t\tsetIndicator('Sobrepeso');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase (x < 32):\n\t\t\t\t\t\t\tsetIndicator('Obesidad');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetIndicator('Obesidad grave');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetCustomer(data);\n\t\t\t\tsetLoading(false);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\n\t}, [systemId]);\n\n\t//const textColor = '#AAA'\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navbar />\n\t\t\t<Container component=\"main\" maxWidth=\"sm\">\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustifyContent=\"flex-start\"\n\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t</Grid>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<AccountBox />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\tUsuario:\t{customer.firstname.substring(0, 1).toUpperCase() + '.' + customer.lastname.substring(0, 1).toUpperCase()}\n\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<ArrowForwardIos />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\tIMC: {indicator}\n\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<div style={{\n                      display: 'flex',\n\t\t\t\t\t  flexDirection: 'column',\n\t\t\t\t\t  alignItems: 'center',                \n              }\n              }>\n\t\t\t\t<ReactSpeedometer\t\t\t\t\n\n\t\t\t\t\tmaxValue={50}\n\t\t\t\t\tvalue={Number(customer.bmi)}\n\t\t\t\t\tneedleColor=\"yellow\"\n\t\t\t\t\tstartColor=\"green\"\n\t\t\t\t\tsegments={30}\n\t\t\t\t\tendColor=\"red\"\n\t\t\t\t\theight={200}\n\t\t\t\t\tmaxSegmentLabels={0}\n\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t{error && (\n\t\t\t\t\t<Typography component=\"h6\" variant=\"h6\" style={{ marginBottom: 40 }}>\n\t\t\t\t\t\t{error}\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t\t{loading && (\n\t\t\t\t\t<Typography component=\"h6\" variant=\"h6\" style={{ marginBottom: 40 }}>\n\t\t\t\t\t\tCargando datos ...\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t\t<ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ marginTop: 0 }}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisabled={(error) && true}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/routine',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\troutineId: customer.workoutId\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tRutinas</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ marginTop: 0 }}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tdisabled={(error) && true}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/diet',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tdietId: customer.dietId\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tDietas</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ marginTop: 0 }}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={(error) && true}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/history',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tcustomerId: customer.id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tHistorial</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={(error) && true}\n\t\t\t\t\t\tstyle={{ marginTop: 0 }}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: `/updateall`,\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tsystemId: customer.systemId\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</Button>\n\n\n\n\t\t\t\t</ButtonGroup>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Results;","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextInput = ({label, disabled, ...props})=>{\n    const [field, meta] = useField(props);\n\n    return (\n        <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        disabled={disabled? true:false}\n        fullWidth        \n        label={label}        \n        error={(meta.error) && true}\n        helperText={meta.error}\n        {...field}          \n\n      />\n\n\n    );\n\n}\n\nexport default TextInput\n\n/*\n\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        id=\"systemId\"\n        label={label}\n        name=\"systemId\"\n        autoComplete=\"systemId\"\n        autoFocus\n        onChange={formik.handleChange}\n        value={formik.values.systemId}\n        error={formik.touched.systemId && Boolean(formik.errors.systemId)}\n        helperText={formik.touched.systemId && formik.errors.systemId}\n*/ ","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport Divider from '@mui/material/Divider';\nimport Chip from '@mui/material/Chip';\nimport Grid from '@mui/material/Grid';\n\nimport { createCustomer } from '../services/CustomerService';\nimport TextInput from '../components/TextInput';\n\nconst initValuesCustomer = {\n  systemId: '',\n  firstname: '',\n  lastname: '',\n  sex: '',\n  yearBirth: '',\n  monthBirth: '',\n  dayBirth: '',\n  bloodPressure: '',\n  heartRate: '',\n  height: '',\n  weight: '',\n  bmi: '0',\n  workoutId: '0',\n  dietId: '0',\n  dateControl: '',\n  chest: '',\n  leftArm: '',\n  rightArm: '',\n  waist: '',\n  hips: '',\n  leftThigh: '',\n  rightThigh: ''\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst validationSchema = yup.object({  \n\n  systemId: yup\n    .string('Ingrese código')\n    .required('Requerido'),\n  firstname: yup\n    .string('Enter your nombre')\n    .required('Requerido'),\n  sex: yup\n    .string('M o F')\n    .oneOf(['M', 'F'])\n    .required('Requerido'),\n  height: yup\n    .string('Ingrese talla')\n    .required('Requerido'),\n  weight: yup\n    .string('Ingrese peso')\n    .required('Requerido'),\n\n});\n\nexport default function FormNew(props) {\n  const fecha= new Date();\n  const dateControl = fecha.getFullYear()+'-'+fecha.getMonth()+1+'-'+fecha.getDate();\n  function onSubmit(values) {\n    values.bmi = (values.weight / (values.height * values.height));\n    values.dateControl=dateControl\n    const x = values.bmi;\n    switch (true) {\n      case (x < 18.5):\n        values.workoutId = 1;\n        values.dietId = 4;\n        break;\n      case (x < 25):\n        values.workoutId = 1;\n        values.dietId = 3;\n        break;\n      case (x < 30):\n        values.workoutId = 1;\n        values.dietId = 2;\n        break;\n      default:\n        values.workoutId = 1;\n        values.dietId = 1;\n        break;\n    }\n    values.sex = (values.sex==='M') ? true:false;\n    \n    console.log(values);\n    createCustomer(values)\n\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Formik\n          initialValues={initValuesCustomer}\n          validationSchema={validationSchema}\n          onSubmit={(values) => onSubmit( values )}\n        >\n          <Form >\n            <Typography component=\"h1\" variant=\"h5\" style={{display: 'flex', justifyContent: 'center',   marginBottom:30}}>\n              Nuevo usuario\n            </Typography>\n            <Divider>\n              <Chip label=\"Datos personales\" />\n            </Divider>\n            <Grid container spacing={1}>\n              <Grid item xs={2} >\n                <TextInput name=\"systemId\" label=\"Codigo\" />\n              </Grid>\n              <Grid item xs={5}>\n                <TextInput name=\"firstname\" label=\"Nombre\" />\n              </Grid>\n              <Grid item xs={5} >\n                <TextInput name=\"lastname\" label=\"Apellido\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"sex\" label=\"Sexo\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextInput name=\"yearBirth\" label=\"Año de nacimiento\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"monthBirth\" label=\"Mes de nacimiento\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"dayBirth\" label=\"Dia de nacimiento\" />\n              </Grid>\n            </Grid>\n            <Divider>\n              <Chip label=\"Medidas\" />\n            </Divider>\n            <Grid container spacing={1}>\n              <Grid item xs={3} >\n                <TextInput name=\"weight\" label=\"Peso\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"height\" label=\"Talla\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"bloodPressure\" label=\"Presión Sanguínea\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextInput name=\"heartRate\" label=\"Pulso Cardiáco\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"chest\" label=\"Pecho\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextInput name=\"leftArm\" label=\"Brazo Izquierdo\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"rightArm\" label=\"Brazo Derecho\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"waist\" label=\"Cintura\" />\n              </Grid>\n              <Grid item xs={4} >\n                <TextInput name=\"hips\" label=\"Cadera\" />\n              </Grid>\n              <Grid item xs={4}>\n                <TextInput name=\"leftThigh\" label=\"Pierna Izquierda\" />\n              </Grid>\n              <Grid item xs={4} >\n                <TextInput name=\"rightThigh\" label=\"Pierna Derecha\" />\n              </Grid>\n\n              </Grid>\n              <div style={{\n                    display: 'flex',\n                    justifyContent: 'center',                    \n              }\n              }>\n              <Grid item xs={3} >\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Guardar\n                </Button>\n                <Link to=\"/search\"   style={{ textDecoration: 'none' }}>\n                    <Button\n                    fullWidth\n                        variant=\"outlined\"\n                        color=\"primary\"\n                      \n                    >\n                        Regresar\n                    </Button>\n                </Link>\n              </Grid>\n              </div>\n\n\n          </Form>\n        </Formik>\n      </div>\n\n    </Container >\n  );\n}","import React from \"react\";\nimport Navbar from '../components/Navbar'\nimport FormNew from '../components/FormNew'\n\n\nfunction CustomerNew (){\n    return(        \n        <React.Fragment>    \n            <Navbar />\n            <FormNew />                    \n        </React.Fragment>\n    );\n}\n\nexport default CustomerNew;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst validationSchema = yup.object({\n  systemId: yup    \n    .number()\n    .required('Requerido')\n    .typeError('Deber ser numero')\n\n});\n\nexport default function FormSearch() {\n  const history = useHistory();\n  const classes = useStyles();\n  const push = (url) => {\n    history.push(url);\n  }\n  const formik = useFormik({\n    initialValues: { systemId: '' },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n      push(`/updateall?id=${values.systemId}`);\n    }\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form onSubmit={formik.handleSubmit} className={classes.form} >\n          <Typography component=\"h3\" variant=\"h5\">\n            Ingresar código\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"systemId\"\n            label=\"Código\"\n            name=\"systemId\"            \n            autoFocus\n            onChange={formik.handleChange}\n            value={formik.values.systemId}\n            error={formik.touched.systemId && Boolean(formik.errors.systemId)}\n            helperText={formik.touched.systemId && formik.errors.systemId}\n          />\n\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Buscar\n          </Button>\n\n\n\n        </form>\n\n      </div>\n\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));","import React from \"react\";\nimport Navbar from '../components/Navbar'\nimport FormSearch from '../components/FormSearch'\n\n\nfunction SearchOne (){\n  \n    return(        \n        <React.Fragment>    \n            <Navbar />\n            <FormSearch />                    \n        </React.Fragment>\n    );\n}\n\nexport default SearchOne;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction ChatRoomPage() {\n  const loadCustomer = {\n    id:'',\n    systemId:'',\n    firstname:'',\n    lastname:'',\n    height:''\n\n  }\n  const [customer, setCustomer]= useState(loadCustomer)\n\n  useEffect(()=>{\n    fetch(`https://besport.herokuapp.com/customers/2`)\n    .then(response => response.json())\n    .then(data => setCustomer(data));     \n  },[]);\n\n  const formik = useFormik(\n    {\n      initialValues: customer\n      ,\n      onSubmit: values => console.log(values),\n      enableReinitialize: true,\n      \n    }\n  )\n \n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label>\n      </label>\n        <input \n        name = 'firstname'\n        type = 'text'\n        onChange= {formik.handleChange}\n        value={formik.values.firstname}\n        />\n    </form>\n  );\n}\nexport default ChatRoomPage;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useFormik, } from 'formik';\nimport * as yup from 'yup';\n\nimport Divider from '@mui/material/Divider';\nimport Chip from '@mui/material/Chip';\nimport Grid from '@mui/material/Grid';\n\nimport { getOneCustomer, updateCustomer } from '../services/CustomerService';\n\n\nimport { useHistory } from \"react-router-dom\";\n\n\nconst validationSchema = yup.object({\n  systemId: yup\n    .string('Enter your code')\n    .required('Requerido'),\n  firstname: yup\n    .string('Enter your nombre')\n    .required('Requerido'),\n  lastname: yup\n    .string('Enter your apellido')\n    .required('Requerido'),\n  height: yup\n    .string('Ingrese talla')\n    .min(1, 'Password should be of minimum 1 characters length')\n    .required('Requerido'),\n  weight: yup\n    .string('Ingrese Peso')\n    .min(1, 'Password should be of minimum 1 characters length')\n    .required('Requerido'),\n});\n\nconst intialCustomer = {\n  id: '',\n  systemId: '',\n  firstname: '',\n  lastname: '',\n  username: '',\n  password: '',\n  height: '',\n  weight: '',\n  bmi: '',\n  workoutId: '',\n  dietId: '',\n  status: '',\n  deleted: ''\n}\n\nexport default function FormUpdate({ systemIdc }) {\n  const history = useHistory();\n  const [customer, setCustomer] = useState(intialCustomer)\n  \n  const back = () => {\n    history.goBack();\n  }\n\n  useEffect(() => {\n\t\tgetOneCustomer(systemIdc)\n\t\t.then(response => {\n\t\t\tif(!response.ok)\n\t\t\t{\n\t\t\t\tthrow Error('No se encuentra el codigo');\n\t\t\t}\n\t\t\treturn response.json();\n\t\t})\n\t\t.then(data => {\n\t\t\tsetCustomer(data);\n\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err.message);\n\t\t});\n\n  }, [systemIdc]);\n\n  const formik = useFormik({\n    initialValues: customer,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: (values) => {  \n      values.bmi=(values.weight/(values.height*values.height));   \n      values.workoutId=1;\n      values.dietId=1;\n      setCustomer(values);\n      updateCustomer(values);\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form onSubmit={formik.handleSubmit} className={classes.form} >\n          <Typography component=\"h4\" variant=\"h5\" style={{marginBottom:40}}>\n            Actualizar datos\n          </Typography>\n          <Divider>\n            <Chip label=\"Datos personales\" />\n          </Divider>\n          <Grid container spacing={1}>\n            <Grid item xs={3} sm={3}>\n              <TextField\n\n                disabled\n                variant=\"outlined\"\n                margin=\"normal\"\n\n                id=\"id\"\n                name=\"id\"\n                onChange={formik.handleChange}\n                value={formik.values.id}\n                error={formik.touched.id && Boolean(formik.errors.id)}\n                helperText={formik.touched.id && formik.errors.id}\n              />\n            </Grid>\n            <Grid item xs={4} sm={4}>\n              <TextField\n                disabled\n                variant=\"outlined\"\n                margin=\"normal\"\n\n                id=\"systemId\"\n                label=\"Código\"\n                name=\"systemId\"\n                autoComplete=\"systemId\"\n\n                onChange={formik.handleChange}\n                value={formik.values.systemId}\n                error={formik.touched.systemId && Boolean(formik.errors.systemId)}\n                helperText={formik.touched.systemId && formik.errors.systemId}\n              />\n            </Grid>\n            <Grid item xs={5} sm={5}>\n              <TextField\n                disabled\n                variant=\"outlined\"\n                margin=\"normal\"\n\n                id=\"firstname\"\n                label=\"Nombre\"\n                name=\"firstname\"\n                autoComplete=\"firstname\"\n\n                onChange={formik.handleChange}\n                value={formik.values.firstname.substring(0, 1).toUpperCase() + ' ' + formik.values.lastname.substring(0, 1).toUpperCase()}\n                error={formik.touched.firstname && Boolean(formik.errors.firstname)}\n                helperText={formik.touched.firstname && formik.errors.firstname}\n              />\n            </Grid>\n          </Grid>\n          <Divider>\n            <Chip label=\"Indice masa corporal\" />\n          </Divider>\n          <Grid container spacing={1}>\n          <Grid item xs={4} sm={4}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"height\"\n            label=\"Talla en metros\"\n            name=\"height\"\n            autoComplete=\"height\"\n            onChange={formik.handleChange}\n            value={formik.values.height}\n            error={formik.touched.height && Boolean(formik.errors.height)}\n            helperText={formik.touched.height && formik.errors.height}\n          />\n        </Grid>\n           <Grid item xs={4} sm={4}>\n          <TextField \n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"weight\"\n            label=\"Peso KG\"\n            name=\"weight\"\n            autoComplete=\"weight\"\n            onChange={formik.handleChange}\n            value={formik.values.weight}\n            error={formik.touched.weight && Boolean(formik.errors.weight)}\n            helperText={formik.touched.weight && formik.errors.weight}\n          />\n        </Grid>\n        <Grid item xs={4} sm={4}>\n          <TextField\n          disabled\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"bmi\"\n            label=\"Indice\"\n            name=\"bmi\"      \n            onChange={formik.handleChange}\n            value={formik.values.bmi}\n            error={formik.touched.bmi && Boolean(formik.errors.bmi)}\n            helperText={formik.touched.bmi && formik.errors.bmi}\n          />\n               </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Actualizar\n          </Button>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={()=>back()}\n          >\n            Regresar\n          </Button>\n\n        </form>\n\n      </div>\n\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));","import React from \"react\";\nimport Navbar from '../components/Navbar'\nimport FormUpdate from '../components/FormUpdate'\nimport { useLocation } from \"react-router-dom\";\n\nfunction CustomerUpdate (){\n\n    const location = useLocation()\n    const { systemId } = location.state\n\n  /*  const query  = useQuery();\n    const systemId=query.get('id');*/\n\n    return(        \n        <React.Fragment>    \n            <Navbar />\n            <FormUpdate systemIdc = {systemId}/>                    \n        </React.Fragment>\n    );\n}\n\nexport default CustomerUpdate;","const urlCrud = 'https://onesportbev1.herokuapp.com/measures';\n//const urlCrud = 'https://onesportbev1.herokuapp.com/customers';\n//const urlCrudHistory = 'http://localhost:8081/history/';\n\n\n\nconst createMeasure = async (measure) => {\n    const resp = await fetch(urlCrud, {\n        method: 'POST',\n        body: JSON.stringify(measure),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    return await resp.json();\n}\nconst getMeasureByCustomerId = async (id) => {\n    const response = await fetch(`${urlCrud}/${id}`);\n    const data = await response.json();\n    return data;\n}\n\n\n\nexport {\n    createMeasure,\n    getMeasureByCustomerId\n}","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport Divider from '@mui/material/Divider';\nimport Chip from '@mui/material/Chip';\nimport Grid from '@mui/material/Grid';\nimport TextInput from '../components/TextInput';\nimport { getOneCustomer, updateAllCustomer } from '../services/CustomerService';\nimport { getMeasureByCustomerId } from '../services/MeasureService';\n\nconst validationSchema = yup.object({\n  systemId: yup\n    .string('Enter your code')\n    .required('Requerido'),\n  firstname: yup\n    .string('Enter your nombre')\n    .required('Requerido'),\n  lastname: yup\n    .string('Enter your apellido')\n    .required('Requerido'),\n  height: yup\n    .string('Ingrese talla')\n    .min(1, 'Password should be of minimum 1 characters length')\n    .required('Requerido'),\n  weight: yup\n    .string('Ingrese Peso')\n    .min(1, 'Password should be of minimum 1 characters length')\n    .required('Requerido'),\n  sex: yup\n    .string('M o F')\n    .oneOf(['M', 'F'])\n    .required('Requerido'),\n  yearBirth: yup\n    .string('Ingrese año')    \n    .required('Requerido'),\n  monthBirth: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  dayBirth: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  bloodPressure: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  heartRate: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  chest: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  leftArm: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  rightArm: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  waist: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  hips: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  leftThigh: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n  rightThigh: yup\n    .string('Ingrese Mes')    \n    .required('Requerido'),\n});\n\nconst intialCustomer = {\n  id: '',\n  systemId: '',\n  firstname: '',\n  lastname: '',\n  sex: '',\n  yearBirth: '',\n  monthBirth: '',\n  dayBirth: '',\n  bloodPressure: '',\n  heartRate: '',\n  height: '0',\n  weight: '0',\n  bmi: '0',\n  workoutId: '0',\n  dietId: '0',\n  dateControl: '',\n  chest: '',\n  leftArm: '',\n  rightArm: '',\n  waist: '',\n  hips: '',\n  leftThigh: '',\n  rightThigh: ''\n}\n\nexport default function FormUpdateAll() {\n  const history = useHistory();\n\n  const push = (url) => {\n    history.push(url);\n  }\n  const location = useLocation()\t\n  const {  systemId } = location.state\n\n  const [customer, setCustomer] = useState(intialCustomer)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    getOneCustomer(systemId)\n      .then(response => {\n        if (!response.ok) {\n          throw Error('No se encuentra el codigo');\n        }\n        return response.json();\n      })\n      .then(data => {        \n        //setCustomer(data);\n        getMeasureByCustomerId(data.id)\n        .then(measure => {\n          data.chest=measure.chest;    \n          data.leftArm=measure.leftArm;    \n          data.rightArm=measure.rightArm;    \n          data.waist=measure.waist;    \n          data.hips=measure.hips;              \n          data.leftThigh=measure.leftThigh;    \n          data.rightThigh=measure.rightThigh; \n          data.sex= (data.sex)? 'M': 'F'\n          setCustomer (data)\n        })\n      })\n      .catch(err => {\n        console.log(err.message);\n        setError('No disponible')\n      });\n\n  }, [systemId]);\n\n\n  const classes = useStyles();\n  const fecha= new Date();\n  const dateControl = fecha.getFullYear()+'-'+fecha.getMonth()+1+'-'+fecha.getDate();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Actulizar informacion\n        </Typography>\n        {error && error}\n        <Formik\n          initialValues={customer}\n          validationSchema={validationSchema}\n          enableReinitialize={true}\n          onSubmit={(values) => {\n            \n            values.bmi = (values.weight / (values.height * values.height));\n            values.dateControl=dateControl;\n            values.workoutId = 1;\n            values.dietId = 1;\n            setCustomer(values);\n            console.log(values);\n            values.sex= (values.sex==='M')? true : false\n            updateAllCustomer(values);\n            push(`/search`);\n          }\n\n        }\n        >\n          <Form >\n            <Typography component=\"h1\" variant=\"h5\">\n  \n            </Typography>\n            <Divider>\n              <Chip label=\"Datos personales\" />\n            </Divider>\n            <Grid container spacing={1}>\n              <Grid item xs={4} >\n                <TextInput name=\"id\" label=\"Codigo\" disabled={true} />\n              </Grid>\n              <Grid item xs={4} >\n                <TextInput name=\"systemId\" label=\"Codigo Cliente\" />\n              </Grid>\n              <Grid item xs={6}>\n                <TextInput name=\"firstname\" label=\"Nombre\" />\n              </Grid>\n              <Grid item xs={6} >\n                <TextInput  name=\"lastname\" label=\"Apellido\" />\n              </Grid>\n              <Grid item xs={2} >\n                <TextInput name=\"sex\" label=\"Sexo\" />\n              </Grid>\n              <Grid item xs={4}>\n                <TextInput name=\"yearBirth\" label=\"Año de nacimiento\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"monthBirth\" label=\"Mes de nacimiento\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"dayBirth\" label=\"Dia de nacimiento\" />\n              </Grid>\n            </Grid>\n            <Divider>\n              <Chip label=\"Medidas\" />\n            </Divider>\n            <Grid container spacing={1}>\n              <Grid item xs={3} >\n                <TextInput name=\"weight\" label=\"Peso\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"height\" label=\"Talla\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"bloodPressure\" label=\"Presió Sanguínea\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextInput name=\"heartRate\" label=\"Pulso Cardiáco\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"chest\" label=\"Pecho\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextInput name=\"leftArm\" label=\"Brazo Izquierdo\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"rightArm\" label=\"Brazo Derecho\" />\n              </Grid>\n              <Grid item xs={3} >\n                <TextInput name=\"waist\" label=\"Cintura\" />\n              </Grid>\n              <Grid item xs={4} >\n                <TextInput name=\"hips\" label=\"Cadera\" />\n              </Grid>\n              <Grid item xs={4}>\n                <TextInput name=\"leftThigh\" label=\"Pierna Izquierda\" />\n              </Grid>\n              <Grid item xs={4} >\n                <TextInput name=\"rightThigh\" label=\"Pierna Derecha\" />\n              </Grid>\n\n\n              <Grid item xs={3} >\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Actualizar\n                </Button>\n\n              </Grid>\n            </Grid>\n\n          </Form>\n        </Formik>\n\n      </div>\n\n    </Container >\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));","import React from \"react\";\nimport Navbar from '../components/Navbar'\nimport FormUpdateAll from '../components/FormUpdateAll'\n\n\nfunction CustomerUpdateAll (){\n    \n    return(        \n        <React.Fragment>    \n            <Navbar />\n            <FormUpdateAll />                    \n        </React.Fragment>\n    );\n}\n\nexport default CustomerUpdateAll;","//const urlCrud = 'http://localhost:8081/exercises';\nconst urlCrud = 'https://onesportbev1.herokuapp.com/exercises';\n\n\nconst getExercicesByWorkoutId = async (id) => {\n    const response = await fetch(`${urlCrud}/workout/${id}`);    \n    const data = await response.json();\n    return data;\n}\n\n\n\nexport {\n    getExercicesByWorkoutId\n}","import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar'\nimport Container from '@material-ui/core/Container';\nimport { useLocation } from \"react-router-dom\";\nimport YouTube from 'react-youtube';\n\n//import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nimport { getExercicesByWorkoutId } from '../services/ExerciseService';\n\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\"> {row.description}\n        </TableCell>        \n\t\t<TableCell align=\"right\">{row.repetitions}</TableCell>\n        <TableCell align=\"right\">{row.series}</TableCell>\n\n        \n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n         \n\t\t\t  <YouTube \n                videoId={row.path}               \n            />\n\t\t\t    <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\n\t\t\t\t{row.details} \n      </Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\n \nfunction Routine() {\n\n\tconst location = useLocation()\n\tconst [exercises, setExercises] = useState([])\n    const { routineId } = location.state\n\n\tuseEffect(() => {\t\t\n\t\tgetExercicesByWorkoutId(routineId)\n\t\t.then(data => {\n\t\t\tsetExercises(data);\t\t\t\n\t\t});\n\n\t}, [routineId]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navbar />\n\t\t\t<Container component=\"main\" maxWidth=\"sm\">\n\t\n\t\t\t<TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Ejercicio</TableCell>\n            <TableCell align=\"right\">Series</TableCell>\n            <TableCell align=\"right\">Repetir</TableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {exercises.map((exercise) => (\n            <Row key={exercise.id} row={exercise} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Routine;","import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar'\nimport Container from '@material-ui/core/Container';\nimport { useLocation } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Typography from '@material-ui/core/Typography';\n\nconst intialDiet = {\n\tid: '',\n\tdescription: '',\n\tpath: ''\n\n}\n\nfunction Diet() {\n\n\tconst location = useLocation()\n\tconst { dietId } = location.state\n\n\tconst [diet, setDiet] = useState(intialDiet)\n\tuseEffect(() => {\n\n\t\tfetch(`https://onesportbev1.herokuapp.com/diets/${dietId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setDiet(data))\n\t\t\t.catch(error => console.error('Error:', error));\n\n\t}, [dietId]);\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navbar />\n\t\t\t<Container component=\"main\" maxWidth=\"md\">\n\t\t\t\t<div style={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}\n\t\t\t\t}>\n\t\t\t\t\t<Typography variant=\"h5\" component=\"div\" gutterBottom >\n\t\t\t\t\t\tDieta recomendada:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<AccountBox />\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText >\n\t\t\t\t\t\t\t\t{diet.description}\n\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</List>\n\t\t\t\t\t<img style={{ width: 600 }} src={diet.path} alt=\"dieta\" />;\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Diet;","//const urlCrud = 'http://localhost:8081/history';\nconst urlCrud = 'https://onesportbev1.herokuapp.com/history';\n//const urlCrudHistory = 'http://localhost:8081/history/';\n\n\n\nconst getHistoryByCustomerId = async (id) => {\n    const response = await fetch(`${urlCrud}/${id}`);\n    const data = await response.json();\n    return data;\n}\n\n\n\nexport {\n\n    getHistoryByCustomerId\n}","import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar'\nimport Container from '@material-ui/core/Container';\nimport { useLocation } from \"react-router-dom\";\n\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\n\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\n\nimport { getHistoryByCustomerId } from '../services/HistoryService';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\"> {row.dateControl}\n        </TableCell>\n        <TableCell align=\"right\">{row.weight}</TableCell>\n        <TableCell align=\"right\">{row.bmi}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ flexGrow: 1 }}  style={{ paddingBottom: 10, paddingTop: 10 }} >\n              <Grid container spacing={1}>\n                <Grid item xs={4}>\n                  <Item>Pecho: {row.chest}</Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Brazo Izquierdo: {row.leftArm} </Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Brazo Derecho: {row.rightArm}</Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Cintura: {row.waist}</Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Cadera: {row.hips}</Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Muslo Izquierda: {row.leftThigh}</Item>\n                </Grid>\n                <Grid item xs={4}>\n                  <Item>Muslo Derecha: {row.rightThigh}</Item>\n                </Grid>\n              </Grid>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\nfunction History() {\n\n  const location = useLocation()\n  const [histories, setHistories] = useState([])\n  const { customerId } = location.state\n\n  useEffect(() => {\n    getHistoryByCustomerId(customerId)\n      .then(data => {\n        setHistories(data);\n      });\n\n  }, [customerId]);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Container component=\"main\" maxWidth=\"sm\">\n\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHead>\n              <TableRow>\n                <TableCell />\n                <TableCell>Fecha</TableCell>\n                <TableCell align=\"right\">Peso</TableCell>\n                <TableCell align=\"right\">IMC</TableCell>\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {histories.map((history) => (\n                <Row key={history.id} row={history} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default History;","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Splash from './pages/Splash'\nimport Search from './pages/Search'\nimport Weight from './pages/Weight'\nimport Results from './pages/Results'\nimport CustomerNew from './pages/CustomerNew'\nimport SearchOne from './pages/SearchOne'\nimport Test from './pages/Test'\nimport CustomerUpdate from './pages/CustomerUpdate'\nimport CustomerUpdateAll from './pages/CustomerUpdateAll'\nimport Routine from './pages/Routine'\nimport Diet from './pages/Diet'\nimport History from './pages/History'\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <Switch>\n      <Route exact path=\"/\" > <Redirect to=\"/splash\" />  </Route>\n        <Route exact path=\"/splash\" component={Splash} />        \n        <Route exact path=\"/search\" component={Search} />        \n        <Route exact path=\"/weight/:current\" component={Weight} />        \n        <Route exact path=\"/results\" component={Results} />        \n        <Route exact path=\"/new/\" component={CustomerNew} /> \n        <Route exact path=\"/one/\" component={SearchOne} /> \n        <Route exact path=\"/update/\" component={CustomerUpdate} /> \n        <Route exact path=\"/test/\" component={Test} /> \n        <Route exact path=\"/routine/\" component={Routine} /> \n        <Route exact path=\"/diet/\" component={Diet} /> \n        <Route exact path=\"/updateall/\" component={CustomerUpdateAll} /> \n        <Route exact path=\"/history/\" component={History} /> \n    \n      </Switch>\n    </BrowserRouter>\n\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}